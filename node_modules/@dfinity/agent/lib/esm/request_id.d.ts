import { Buffer } from 'buffer/';
import { BinaryBlob } from '@dfinity/candid';
export declare type RequestId = BinaryBlob & {
    __requestId__: void;
};
/**
 * get RequestId as hex-encoded blob.
 * @param requestId - RequestId to hex
 */
export declare function toHex(requestId: RequestId): string;
/**
 * sha256 hash the provided Buffer
 * @param data - input to hash function
 */
export declare function hash(data: Buffer): BinaryBlob;
/**
 * Get the RequestId of the provided ic-ref request.
 * RequestId is the result of the representation-independent-hash function.
 * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map
 * @param request - ic-ref request to hash into RequestId
 */
export declare function requestIdOf(request: Record<string, any>): RequestId;

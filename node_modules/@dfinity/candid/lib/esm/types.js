/* eslint-disable @typescript-eslint/no-empty-interface */
/* eslint-disable jsdoc/require-jsdoc */
import { Buffer } from 'buffer/';
import { lebEncode } from './utils/leb128';
export function blobFromBuffer(b) {
    return b;
}
export function blobFromUint8Array(arr) {
    return Buffer.from(arr);
}
export function blobFromText(text) {
    return Buffer.from(text);
}
export function blobFromUint32Array(arr) {
    return Buffer.from(arr);
}
export function derBlobFromBlob(blob) {
    return blob;
}
export function blobFromHex(hex) {
    return Buffer.from(hex, 'hex');
}
export function blobToHex(blob) {
    return blob.toString('hex');
}
export function blobToUint8Array(blob) {
    return new Uint8Array(blob.slice(0, blob.byteLength));
}
/**
 * Create a random Nonce, based on date and a random suffix.
 */
export function makeNonce() {
    return lebEncode(BigInt(+Date.now()) * BigInt(100000) + BigInt(Math.floor(Math.random() * 100000)));
}
//# sourceMappingURL=types.js.map